version: "3.8"
# By default, it is excluded from the services started by 'docker compose up'
# due to the non-default profile it belongs to. To run it, either provide the
# '--profile=setup' CLI flag to Compose commands, or "up" the service by name
# such as 'docker compose up setup'.

services:
    # setup script is a modified script from a github repo, check the link in the README.md, this prevents all the setup thing with
    setup:
        profiles:
            - setup
        build:
            context: ./setup/
            args:
                ELASTIC_VERSION: ${ELASTIC_VERSION}
        init: true
        volumes:
            - ./setup/entrypoint.sh:/entrypoint.sh:ro,Z
            - ./setup/lib.sh:/lib.sh:ro,Z
            - ./setup/roles:/roles:ro,Z
        environment:
            ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
            KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
        networks:
            - elk
        depends_on:
            - elasticsearch

    elasticsearch:
        image: elasticsearch:${ELASTIC_VERSION:-}
        container_name: elasticsearch
        ports:
            - 19200:9200
            - 19300:9300
        environment:
            ELASTIC_PASSWORD: ${ELASTIC_PASSWORD:-}
            discovery.type: single-node
        volumes:
            - ../ELK/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,Z
            - ../ELK/elasticsearch/data:/usr/share/elasticsearch/data:Z
        networks:
            - elk
        restart: always

    kibana:
        image: kibana:${ELASTIC_VERSION:-}
        container_name: kibana
        environment:
            KIBANA_SYSTEM_PASSWORD: ${KIBANA_SYSTEM_PASSWORD:-}
            ELASTICSEARCH_HOSTS: http://elasticsearch:9200
        volumes:
            - ../ELK/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml:ro,Z
        networks:
            - elk
        ports:
            - 16601:5601
        depends_on:
            - elasticsearch
        restart: always

    heartbeat:
        image: docker.elastic.co/beats/heartbeat:${ELASTIC_VERSION:-}
        container_name: heartbeat
        env_file: ./.env
        cap_add:
            - NET_RAW
        environment:
            - strict.perms=false
            - output.elasticsearch.hosts=["elasticsearch:9200"]
        networks:
            - elk
        volumes:
            - ../ELK/heartbeat/heartbeat.yml:/usr/share/heartbeat/heartbeat.yml:ro,Z
            - ../ELK/heartbeat/services:/usr/share/heartbeat/services
        restart: always

    consumer:
        build:
            context: ./consumer
            dockerfile: ./Dockerfile
        container_name: consumer
        env_file: ./.env
        volumes:
            - ./consumer/heartbeat_rabbitmq.csv:/app/heartbeat_rabbitmq.csv
        networks:
            - elk
        depends_on:
            # else it will consume before elasticsearch is up and wont be able to send data
            - elasticsearch
        restart: always

    # not used rn
    # rabbitmq:
    #     image: rabbitmq:3-management-alpine
    #     ports:
    #         - 5672:5672
    #         - 15672:15672
    #     volumes:
    #         - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
    #         - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    #     networks:
    #         - elk

    # TODO alert: send it team an email when a service is down

networks:
    elk:
        driver: bridge
